---
- name: Install python3-pip
  ansible.builtin.apt:
    name: python3-pip
    state: present
  register: result
  until: result is succeeded

- name: Remove docker-py python module
  ansible.builtin.pip:
    name: docker-py
    state: absent
  register: result
  until: result is succeeded

- name: Install docker python module
  ansible.builtin.pip:
    name: docker
    state: present
  register: result
  until: result is succeeded

- name: Create UniFi Controller Directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ unific_dir_data }}"
    - "{{ unific_dir_log }}"
    - "{{ unific_dir_cert }}"
    - "{{ unific_dir_run }}"

# UDP 3478 Port used for STUN. #REQUIRED
# TCP 5514 Port used for remote syslog capture.
# TCP 8080 Port used for device and controller communication. #REQUIRED
# TCP 8443 Port used for controller GUI/API as seen in a web browser #REQUIRED
# TCP 8880 Port used for HTTP portal redirection.
# TCP 8843 Port used for HTTPS portal redirection.
# TCP 6789 Port used for UniFi mobile speed test. #REQUIRED
# TCP 27117 Port used for local-bound database communication.
# UDP 5656-5699 Ports used by AP-EDU broadcasting.
# UDP 10001 Port used for device discovery #REQUIRED
# UDP 1900 Port used for "Make controller discoverable on L2 network" in controller settings.
- name: UniFi Controller Docker Container
  community.docker.docker_container:
    name: unific
    image: jacobalberty/unifi:stable
    pull: true
    volumes:
      - "{{ unific_dir_data }}:/unifi/data:rw"
      - "{{ unific_dir_log }}:/unifi/log:rw"
      - "{{ unific_dir_cert }}:/unifi/cert:rw"
      - "{{ unific_dir_run }}:/var/run/unifi:rw"
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    network_mode: "{{ unific_network_mode }}"
    env:
      TZ: "{{ unific_timezone }}"
    ports:
      - "1900:1900/udp"
      - "3478:3478/udp"
      - "6789:6789"
      - "8080:8080"
      - "8443:8443"
      - "10001:10001/udp"
    restart_policy: unless-stopped
    cpus: "{{ unific_cpus }}"
    memory: "{{ unific_memory }}"
    container_default_behavior: no_defaults
    auto_remove: no
    detach: yes
    init: yes
    interactive: no
    paused: no
    privileged: no
    read_only: no
    tty: no
    labels:
      traefik.enable: "{{ unific_available_externally }}"
      traefik.http.routers.unific.rule: "{{ unific_traefik_router_rule | default(omit) }}"
      traefik.http.routers.unific.entrypoints: "{{ unific_traefik_router_entrypoints | default(omit) }}"
      traefik.http.routers.unific.tls: "true"
      traefik.http.routers.unific.tls.certresolver: "{{ unific_traefik_router_tls_certresolver | default(omit) }}"
      traefik.http.routers.unific.tls.domains[0].main: "*.{{ unific_host_domain }}"
      traefik.http.services.unific.loadbalancer.server.scheme: "https"
      traefik.http.services.unific.loadbalancer.server.port: "{{ unific_traefik_https_port | default(omit) }}"
  register: unific_docker